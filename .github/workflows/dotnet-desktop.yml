name: Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write  # This grants write permissions to the contents scope

env:
  RELEASE_TAG: "latest_release"

jobs:

  build_and_release:

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Build
      run: dotnet build --configuration Release HellDivers2OneKeyStratagem.sln

    - name: Zip
      shell: powershell
      run: |
        Compress-Archive -Path ./bin/* -DestinationPath HellDivers2OneKeyStratagem.zip

    - name: Delete existing release and tag if they exist
      id: delete_release_and_tag
      run: |
        $headers = @{
          "Authorization" = "token $env:GITHUB_TOKEN"
          "Accept" = "application/vnd.github.v3+json"
        }
        $url = "https://api.github.com/repos/${{ github.repository }}/releases/tags/$env:RELEASE_TAG"
        $response = Invoke-RestMethod -Uri $url -Method Get -Headers $headers -ErrorAction SilentlyContinue
        if ($response) {
          # Delete the release
          Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/releases/$($response.id)" -Method Delete -Headers $headers
          
          # Delete the tag locally and remotely
          git tag -d $env:RELEASE_TAG
          git push origin --delete $env:RELEASE_TAG
        }

    - name: Create tag
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git tag ${{ env.RELEASE_TAG }}
        git push origin ${{ env.RELEASE_TAG }}

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./HellDivers2OneKeyStratagem.zip
        asset_name: HellDivers2OneKeyStratagem.zip
        asset_content_type: application/zip
